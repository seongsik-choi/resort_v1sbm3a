<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="dev.mvc.categrp.CategrpDAOInter"> 
<!-- 
- Mybatis 기능 지원
데이터베이스 연결/해제 자동 지원
JDBC 사용시 꼭 필요한 try ~ catch ~ 문 자동 지원
java.sql.PreparedStatement 객체 자동 생성
executeUpdate() 자동 실행
- select: 결과 레코드가 1건이면 VO(DTO)를 리턴하고, 여러건이면 ArrayList 객체가 생성되어 List 타입으로 리턴

  insert: INSERT SQL 실행
  id: Spring에서 호출시 사용
  parameterType: 전달받는 데이터 객체
  return: 등록한 레코드 갯수 리턴
  SQL선언시 ';'은 삭제
  #{}: 컬럼의 값
  #{name}: public String getName(){
 -->
  <insert id="create" parameterType="dev.mvc.categrp.CategrpVO">
    INSERT INTO categrp
    (categrpno, name, seqno, visible, rdate)
    VALUES
    (categrp_seq.nextval, #{name}, #{seqno}, #{visible}, sysdate)
  </insert>
  
  <!-- 
   레코드 갯수 만큼 CategrpVO 객체를 만들어 ArrayList에 저장하여 리턴,
  List<CategrpVO> list = new ArrayList<CategrpVO>(); 
  -->
  <select id="list_categrpno_asc" resultType="dev.mvc.categrp.CategrpVO">
    SELECT categrpno, name, seqno, visible, rdate
    	FROM categrp
    ORDER BY categrpno ASC
  </select>  
 
  <!-- 조회, id: read, 입력: categrpno, 리턴: CategrpVO , 한건 반환 -> 수정 또는 삭제-->
  <select id="read" resultType="dev.mvc.categrp.CategrpVO" parameterType="int">
    SELECT  categrpno, name, seqno, visible, rdate
    FROM categrp
    WHERE categrpno=#{categrpno}
  </select> 
  
  <!-- 수정, id: update, 입력: CategrpVO, 리턴: int -->
  <update id="update" parameterType="dev.mvc.categrp.CategrpVO">
    UPDATE categrp
    SET name=#{name}, seqno=#{seqno}, visible=#{visible}
    WHERE categrpno = #{categrpno}
  </update>  
  
  <!-- 삭제 처리, id=delete, 입력: PK, 리턴: 삭제된 갯수 int -->
  <delete id="delete" parameterType="int">
    DELETE FROM categrp
    WHERE categrpno=#{categrpno}
  </delete>  
   
</mapper> 